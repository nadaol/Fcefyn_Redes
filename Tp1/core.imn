node n1 {
    type router
    model router
    network-config {
	hostname r1
	!
	interface eth0
	 ip address 192.168.2.12/24
	 ipv6 address 2001:aaaa:cccc:1::12/64
	!
	interface eth1
	 ip address 192.168.1.11/24
	 ipv6 address 2001:aaaa:bbbb:1::11/64
	!
    }
    canvas c1
    iconcoords {288.0 251.0}
    labelcoords {288.0 283.0}
    interface-peer {eth0 n2}
    interface-peer {eth1 n3}
    services {OSPFv2 OSPFv3 zebra DHCP IPForward}
}

node n2 {
    type lanswitch
    network-config {
	hostname sw1
	!
    }
    canvas c1
    iconcoords {289.0 367.0}
    labelcoords {289.0 391.0}
    interface-peer {e0 n5}
    interface-peer {e1 n4}
    interface-peer {e2 n1}
}

node n3 {
    type router
    model PC
    network-config {
	hostname h1
	!
	interface eth0
	 ip address 192.168.1.10/24
	 ipv6 address 2001:aaaa:bbbb:1::10/64
	!
    }
    canvas c1
    iconcoords {287.0 80.0}
    labelcoords {287.0 112.0}
    interface-peer {eth0 n1}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.1.11
	ip route add default via 2001::1
	
	}
    }
}

node n4 {
    type router
    model PC
    network-config {
	hostname h2
	!
	interface eth0
	 ip address 192.168.2.10/24
	 ipv6 address 2001:aaaa:cccc:1::10/64
	!
    }
    canvas c1
    iconcoords {133.0 421.0}
    labelcoords {133.0 453.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.2.12
	ip route add default via 2001::1
	
	}
    }
    services {DefaultRoute DHCP}
}

node n5 {
    type router
    model PC
    network-config {
	hostname h3
	!
	interface eth0
	 ip address 192.168.2.11/24
	 ipv6 address 2001:aaaa:cccc:1::11/64
	!
    }
    canvas c1
    iconcoords {469.0 421.0}
    labelcoords {469.0 453.0}
    interface-peer {eth0 n2}
    custom-config {
	custom-config-id service:DefaultRoute
	custom-command DefaultRoute
	config {
	files=('defaultroute.sh', )
	}
    }
    custom-config {
	custom-config-id service:DefaultRoute:defaultroute.sh
	custom-command defaultroute.sh
	config {
	#!/bin/sh
	# auto-generated by DefaultRoute service (utility.py)
	ip route add default via 192.168.2.12
	ip route add default via 2001::1
	
	}
    }
    services {DefaultRoute}
}

link l1 {
    nodes {n5 n2}
    bandwidth 0
}

link l2 {
    nodes {n4 n2}
    bandwidth 0
}

link l3 {
    nodes {n2 n1}
    bandwidth 0
}

link l4 {
    nodes {n1 n3}
    bandwidth 0
}

canvas c1 {
    name {Canvas1}
}

option global {
    interface_names no
    ip_addresses yes
    ipv6_addresses yes
    node_labels yes
    link_labels yes
    show_api no
    background_images no
    annotations yes
    grid yes
    traffic_start 0
}

option session {
}

